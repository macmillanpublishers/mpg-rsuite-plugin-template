import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "org.springframework.boot" version "1.5.22.RELEASE"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply from: 'http://ivy.reallysi.com/ivy-repo/orbis-std.gradle'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/macmillanpublishers/macmillan_rsuite")
        credentials {
            username = project.findProperty("gpr.rsuite.user") ?: System.getenv("GITHUB_RSUITE_ACTOR")
            password = project.findProperty("gpr.rsuite.key") ?: System.getenv("GITHUB_RSUITE_TOKEN")
        }
    }
}

configurations {
    includeInJar
}

ext {
    basename = 'mpg-rsuite-plugin-example'
}

dependencies {

    configurations.compile.extendsFrom(configurations.includeInJar)

    compile('rsi:rsuite-api:5.5.3') {
        transitive = false
    }
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'

    testCompile('org.springframework.boot:spring-boot-starter-test')

    includeInJar("com.macmillanpublishers:mpg-utils:0.0.1")
}

if (!project.hasProperty("profile")) {
    ext.profile = "local"
}

processResources{
    filter ReplaceTokens, tokens:[PLUGIN_VERSION: project.getVersion().toString()]
}

task createUnitTestWar(type : War){
    destinationDirectory = file("$buildDir/reports")
    archiveFileName = "$project.name-unit-test-results.war"
    archiveVersion = ""
    from("target/reports/tests/test")
}

test.finalizedBy createUnitTestWar

jar {
    from {
        configurations.includeInJar.collect { it }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/macmillanpublishers/mpg-rsuite-plugin-example")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
