import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group="com.macmillanpublishers"

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    ivy {
        url 'http://ivy.reallysi.com/ivy-repo/'
        allowInsecureProtocol true
        patternLayout {
            artifact "[organisation]/[module]/[module]-[revision].[ext]"
        }
        metadataSources { artifact() }
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/macmillanpublishers/macmillan_rsuite")
        credentials {
            username = project.findProperty("gpr.rsuite.user") ?: System.getenv("GITHUB_RSUITE_ACTOR")
            password = project.findProperty("gpr.rsuite.key") ?: System.getenv("GITHUB_RSUITE_TOKEN")
        }
    }
}

configurations {
    includeInJar
}

dependencies {

    configurations.implementation.extendsFrom(configurations.includeInJar)

    implementation('rsi:rsuite-api:5.5.3') {
        transitive = false
    }
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.1.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.0'

    includeInJar "com.macmillanpublishers:mpg-utils:3.2.2"
}

if (!project.hasProperty("profile")) {
    ext.profile = "local"
}

processResources{
    filter ReplaceTokens, tokens:[PLUGIN_VERSION: project.getVersion().toString()]
}

task deployLocally(dependsOn: ':build') {
    group = 'build'
    description = 'Deploys the project plugin locally.'

    doFirst {
        println "jar.archivePath ${jar.archivePath}"
        println "rsuite_plugins: ${rsuite_plugins}"
        println "jar.baseName: ${jar.baseName}"
        println "jar.extension: ${jar.extension}"
    }

    doLast {
        copy {
            from jar.archivePath
            into "${rsuite_plugins}"
            rename jar.archiveName, jar.baseName + "." + jar.extension
        }
    }
}

jar {
    from {
        configurations.includeInJar.collect { it }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/macmillanpublishers/${project.name}")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
